<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>python on Tam치s G치l</title><link>http://tamasgal.com/tags/python/</link><description>Recent content in python on Tam치s G치l</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Mon, 05 Apr 2021 22:17:41 +0200</lastBuildDate><atom:link href="http://tamasgal.com/tags/python/index.xml" rel="self" type="application/rss+xml"/><item><title>RAID Monitor for LSI/3Ware MegaRAID controllers</title><link>http://tamasgal.com/raid-monitor/</link><pubDate>Mon, 05 Apr 2021 22:17:41 +0200</pubDate><guid>http://tamasgal.com/raid-monitor/</guid><description>I still manage a few old servers with 3Ware/LSI MegaRAID controllers (e.g. the 9650SE) and wrote the following Python3 script which is sitting in /etc/cron.daily and sends and email if there is any problem with the battery, disks or units. Keep in mind that scripts inside the /etc/cron.* folders are not allowed to have a dot in the filename, otherwise those will be ignored.
If you don&amp;rsquo;t have a working mail configuration, I recommend exim4 which is easily set up in a few minutes with standard settings.</description></item><item><title>pip update-all</title><link>http://tamasgal.com/pip-upgrade-all/</link><pubDate>Fri, 15 Mar 2019 00:00:00 +0000</pubDate><guid>http://tamasgal.com/pip-upgrade-all/</guid><description>Problem to solve Update all packages which are managed by pip.
Fix pip list --outdated --format=freeze | grep -v &amp;#39;^\-e&amp;#39; | cut -d = -f 1 | xargs -n1 pip install -U Alternatively pip freeze|grep &amp;#39;==&amp;#39;|awk -F= &amp;#39;{print $1}&amp;#39; | xargs pip install -U</description></item><item><title>Data Exchange Between Python and C++ via protobuf</title><link>http://tamasgal.com/protobuf/</link><pubDate>Sat, 22 Mar 2014 00:00:00 +0000</pubDate><guid>http://tamasgal.com/protobuf/</guid><description>Installing protobuf The first step is of course installing the protobuf library. I used homebrew for the main library and pip to install the Python modules:
brew install protobuf pip install protobuf Then I defined a very simple data structure using the proto-syntax:
// Filename: foo.proto package prototest; message Foo { required int32 id = 1; required string bar = 2; optional string baz = 3; } This proto-file can now be translated into C++ and Python classes via:</description></item></channel></rss>